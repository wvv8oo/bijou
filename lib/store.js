// Generated by CoffeeScript 1.9.3
(function() {
  var _async, _database, _fs, _knex, _path, createField,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  _knex = require('knex');

  _database = null;

  _fs = require('fs');

  _path = require('path');

  _async = require('async');

  createField = function(table, schema) {
    var field, key, property, ref, results;
    table.increments('id').primary();
    ref = schema.fields;
    results = [];
    for (key in ref) {
      property = ref[key];
      property = property || "string";
      if (typeof property === 'string') {
        results.push(table[property](key));
      } else {
        field = table[property.type || 'string'](key);
        if (property.index) {
          field.index();
        }
        if (property["default"] !== void 0) {
          results.push(field.defaultTo(property["default"]));
        } else {
          results.push(void 0);
        }
      }
    }
    return results;
  };

  exports.database = function() {
    if (!_database) {
      throw new Error('数据库还没有初始化');
    }
    return _database;
  };

  exports.initalize = function(options) {
    return _database = _knex(options);
  };

  exports.createTable = function(schema, cb) {
    var db;
    db = exports.database();
    return db.schema.hasTable(schema.name).then(function(exists) {
      if (exists) {
        return cb(null);
      }
      return db.schema.createTable(schema.name, function(table) {
        return createField(table, schema);
      }).then(function() {
        return cb(null);
      });
    });
  };

  exports.scanSchema = function(dir, cb) {
    var allowExt, files;
    allowExt = ['.coffee', '.json', '.jss'];
    files = _fs.readdirSync(dir);
    return _async.eachSeries(files, (function(filename, done) {
      var ref, schema;
      if (!(ref = _path.extname(filename), indexOf.call(allowExt, ref) >= 0)) {
        return done(null);
      }
      schema = require(dir + "/" + filename).schema;
      if (!(schema && schema.name && schema.fields)) {
        return console.log(filename + "不是一个合法的schema文件");
      }
      return exports.createTable(schema, done);
    }), cb);
  };

}).call(this);
